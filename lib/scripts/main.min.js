!function(){firebase.initializeApp({apiKey:"AIzaSyBzdYHBzOtXU8ufVRY74_XKJUhZgy5Px_4",authDomain:"the-fisherman-68f32.firebaseapp.com",databaseURL:"https://the-fisherman-68f32-default-rtdb.firebaseio.com",projectId:"the-fisherman-68f32",storageBucket:"the-fisherman-68f32.appspot.com",messagingSenderId:"152465678914",appId:"1:152465678914:web:985bb2c1d664bb929883db"});const e=firebase.database(),o=firebase.auth(),s={node:$("body section#force-load-resources"),"10-clubs":$("body section#force-load-resources img.10-clubs"),"10-diamonds":$("body section#force-load-resources img.10-diamonds"),"10-hearts":$("body section#force-load-resources img.10-hearts"),"10-spades":$("body section#force-load-resources img.10-spades"),"11-clubs":$("body section#force-load-resources img.11-clubs"),"11-diamonds":$("body section#force-load-resources img.11-diamonds"),"11-hearts":$("body section#force-load-resources img.11-hearts"),"11-spades":$("body section#force-load-resources img.11-spades"),"12-clubs":$("body section#force-load-resources img.12-clubs"),"12-diamonds":$("body section#force-load-resources img.12-diamonds"),"12-hearts":$("body section#force-load-resources img.12-hearts"),"12-spades":$("body section#force-load-resources img.12-spades"),"13-clubs":$("body section#force-load-resources img.13-clubs"),"13-diamonds":$("body section#force-load-resources img.13-diamonds"),"13-hearts":$("body section#force-load-resources img.13-hearts"),"13-spades":$("body section#force-load-resources img.13-spades"),"1-clubs":$("body section#force-load-resources img.1-clubs"),"1-diamonds":$("body section#force-load-resources img.1-diamonds"),"1-hearts":$("body section#force-load-resources img.1-hearts"),"1-spades":$("body section#force-load-resources img.1-spades"),"2-clubs":$("body section#force-load-resources img.2-clubs"),"2-diamonds":$("body section#force-load-resources img.2-diamonds"),"2-hearts":$("body section#force-load-resources img.2-hearts"),"2-spades":$("body section#force-load-resources img.2-spades"),"3-clubs":$("body section#force-load-resources img.3-clubs"),"3-diamonds":$("body section#force-load-resources img.3-diamonds"),"3-hearts":$("body section#force-load-resources img.3-hearts"),"3-spades":$("body section#force-load-resources img.3-spades"),"4-clubs":$("body section#force-load-resources img.4-clubs"),"4-diamonds":$("body section#force-load-resources img.4-diamonds"),"4-hearts":$("body section#force-load-resources img.4-hearts"),"4-spades":$("body section#force-load-resources img.4-spades"),"5-clubs":$("body section#force-load-resources img.5-clubs"),"5-diamonds":$("body section#force-load-resources img.5-diamonds"),"5-hearts":$("body section#force-load-resources img.5-hearts"),"5-spades":$("body section#force-load-resources img.5-spades"),"6-clubs":$("body section#force-load-resources img.6-clubs"),"6-diamonds":$("body section#force-load-resources img.6-diamonds"),"6-hearts":$("body section#force-load-resources img.6-hearts"),"6-spades":$("body section#force-load-resources img.6-spades"),"7-clubs":$("body section#force-load-resources img.7-clubs"),"7-diamonds":$("body section#force-load-resources img.7-diamonds"),"7-hearts":$("body section#force-load-resources img.7-hearts"),"7-spades":$("body section#force-load-resources img.7-spades"),"8-clubs":$("body section#force-load-resources img.8-clubs"),"8-diamonds":$("body section#force-load-resources img.8-diamonds"),"8-hearts":$("body section#force-load-resources img.8-hearts"),"8-spades":$("body section#force-load-resources img.8-spades"),"9-clubs":$("body section#force-load-resources img.9-clubs"),"9-diamonds":$("body section#force-load-resources img.9-diamonds"),"9-hearts":$("body section#force-load-resources img.9-hearts"),"9-spades":$("body section#force-load-resources img.9-spades"),back:$("body section#force-load-resources img.back"),"x-icon":$("body section#force-load-resources img.x-icon"),"k-icon":$("body section#force-load-resources img.k-icon"),get(e){return this[e].clone()}};s.node.remove();const t={id:"",name:"",exp:0,level:1,stats:{"games-finished":0,"games-played":0,"times-lost":0,"times-won":0},nodes:{profile:{board:$('<section id="board"></section>'),username:$("<span>username</span>"),level:$("<span>level</span>"),bar:$("<div></div>"),exp:$("<span>exp</span>"),stats:$('<div class="stats"></div>')},room:{box:$('<section id="room"></section>'),info:$("<h1><span>Code: CODE</span><span>Password: PASS</span></h1>"),message:$("<p>Waiting for server messages targeted at this room...</p>")}},room:{code:"",password:""},joinRoom(o,s){this.room.code=o,this.room.password=s,this.nodes.profile.board.remove(),$("body").append(this.nodes.room.box.append(this.nodes.room.message,this.nodes.room.info));const t=this,n=e.ref("/rooms/"+o);n.on("value",(e=>{const o=e.val();null!=o&&(t.nodes.room.message.text(o.message),t.nodes.room.info.empty(),t.nodes.room.info.append($(`<span>Code: ${t.room.code}</span>`)),o.locked&&t.nodes.room.info.append($(`<span>Pass: ${t.room.password}</span>`)),o.started&&null!=o.game&&(n.off(),a.id=o.game,a.updateRealTime()))}))},updateRealTime(){const o=this;e.ref("/users/"+this.id).on("value",(e=>{const s=e.val();if(null==s)return;o.name=s.name,o.exp=s.exp,o.level=s.level,o.stats=s.stats,o.nodes.profile.username.text(o.name),o.nodes.profile.level.text(o.level),o.nodes.profile.bar.css("width",o.exp%1e3/10+"%"),o.nodes.profile.exp.text(o.exp%1e3);const t=s.stats;o.nodes.profile.stats.empty();for(const e in t)o.nodes.profile.stats.append($("<div></div>").append($(`<span>${[...(""+e).matchAll(/-?(\w+)-?/g)].map((e=>e[1])).map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}</span>`),$(`<span>${t[e]}</span>`)))}))},request(o,s){s=s||"client";const t=this;return{uid:t.id,type:o,origin:s,content:{},write(e,o){return this.content[e]=o,this},async send(o,s){o=o||(e=>{}),s=s||(e=>{});const a=e.ref(`/${this.origin}/${this.uid}`),n=await a.push().key;if(a.child(n).set({uid:this.uid,id:n,type:this.type.toUpperCase(),timestamp:(new Date).getTime(),origin:this.origin,content:this.content},(e=>{null!=e&&console.log(e)})),"USER-GOT-RESPONSE"==this.type.toUpperCase())return;const d=[...this.origin.split("/"),this.uid];d[d.length-2]="server";const i=e.ref(d.join("/"));i.child(n).on("value",(e=>{const a=e.val();null!=a&&(i.off(),t.request("USER-GOT-RESPONSE").write("prevResId",n).send(),a.content.success?o(a):s(a))}))}}}},a={id:"",moving:"",message:{updatable:$("<p>Wait for your turn.</p>"),node:$('<section id="game-message-ui">'),update(e){return this.updatable.text(e)}},pile:{node:$('<section id="game-pile-ui" data-selected-pile="">'),deck:$('<div class="cards">'),discard:$('<div class="cards">'),updateDeck(e){this.deck.empty();const o=s.get("back"),t=[],a=this;for(const s of e)t.push(o.clone().click((()=>{a.node.attr("data-selected-pile","deck")})));o.css("visibility","hidden"),o.click((()=>{a.node.attr("data-selected-pile","")}));const n=2-t.length;for(let e=0;e<n;e++)t.push(o.clone());t.reverse(),this.deck.append(...t)},get selectedPile(){return this.node.attr("data-selected-pile")},resetSelect(){this.node.attr("data-selected-pile","")},updateDiscard(e){this.discard.empty();const o=[],t=this;for(const a of e)o.push(s.get(`${a.rank}-${a.suit}`).click((()=>{t.node.attr("data-selected-pile","discard")})));const a=s.get("back");a.css("visibility","hidden");const n=2-o.length;for(let e=0;e<n;e++)o.push(a.clone().click((()=>{t.node.attr("data-selected-pile","")})));o.reverse(),this.discard.append(...o),this.resetSelect()}},hand:{node:$('<section id="game-hand-ui" data-selected-card="">'),get selectedCard(){const e=this.node.attr("data-selected-card").split("-");return e.length<2?null:{rank:e[0],suit:e[1]}},resetSelect(){this.node.attr("data-selected-card",null)},update(e){const o=[$("<p>You're eliminated.</p>")],t=this;for(const a of e){const e=`${a.rank}-${a.suit}`;o.push(s.get(e).click((()=>{t.node.attr("data-selected-card",e)})))}this.node.empty(),this.node.append(...o)}},option:{node:$('<section id="game-option-ui">'),message:$('<div class="message">SERVER MESSAGE</div>'),buttons:{node:$('<div class="options">'),draw:$("<button>Draw</button>"),discard:$("<button>Discard</button>"),knock:$("<button>Knock</button>"),disableAll(){this.draw.prop("disabled",!0),this.draw.off(),this.discard.prop("disabled",!0),this.discard.off(),this.knock.prop("disabled",!0),this.discard.off()}}},players:{node:$('<section id="game-players-ui">'),container:$('<div class="container">'),update(e){this.container.empty();const o=[...Object.values(e.players)],a=[];for(const n of o){const o=[];for(let e=0;e<3;e++)o.push(s.get("x-icon"));for(let e=0;e<n.strikes;e++)o[e].attr("class","striked");a.push($(`<div class="player${n.name==t.name?" me":""}">`).append($(`<span>${n.name}</span>`),$("<span>").append(...o),$(`<span>${e.statsHidden&&n.id!=t.id?"?":n.value}</span>`)))}this.container.append(...a)}},order:{node:$('<section id="game-order-ui">'),turn:$("<h1>Turn:before #</h1>"),container:$('<div class="container">'),update(e){this.container.empty(),this.turn.text(e.turn);const o=e.players,t=e.turnOrder,a=[];for(const e of t){const t=s.get("k-icon");o[e].knocked&&t.attr("class","knocked"),a.push($('<div class="player">').append(t,$(`<span>${e}</span>`)))}this.container.append(...a)}},updateRealTime(){$("body").empty(),$("body").append(function(){const e=a.pile.node;return e.append($('<div class="pile">').append(a.pile.deck,$("<h1>Deck</h1>")),$('<div class="pile">').append(a.pile.discard,$("<h1>Discard</h1>"))),e}(),function(){const e=a.players.node;return e.append($("<h1>Players</h1>"),a.players.container),e}(),function(){const e=a.order.node;return e.append(a.order.turn,a.order.container),e}(),a.hand.node,function(){const e=a.option.node;return e.append(a.option.message,a.option.buttons.node.append(a.option.buttons.draw,a.option.buttons.discard,a.option.buttons.knock)),e}(),function(){const e=a.message.node;return e.append(a.message.updatable),e}());const o=this;o.option.buttons.disableAll(),e.ref("/games/"+this.id).on("value",(e=>{const s=e.val();if(null==s&&window.location.reload(),o.pile.updateDeck(null!=s.deck?s.deck:[]),o.pile.updateDiscard(null!=s.discard?s.discard:[]),o.players.update(s),o.order.update(s),o.hand.update(null!=s.players&&null!=s.players[t.name]&&null!=s.players[t.name].hand?s.players[t.name].hand:[]),o.option.buttons.disableAll(),s.over)o.option.message.text("Game is over.");else if(s.turnOrder.includes(t.name))if(o.moving=s.turnOrder[0],s.roundOver)o.option.message.text("Waiting for tally...");else if(o.moving==t.name)if(s.players[t.name].hand.length<4){o.option.message.text("Would you like to draw a card or knock?"),o.option.buttons.draw.prop("disabled",!1),o.option.buttons.draw.on("click",(()=>{o.option.buttons.knock.prop("disabled",!0),o.option.buttons.draw.prop("disabled",!0),o.option.message.text("Select the pile you want to draw from."),o.pile.resetSelect(),$("body").on("click",(function e(){const s=o.pile.selectedPile;["deck","discard"].includes(s)&&t.request("DRAW-"+s.toUpperCase(),`gamecomms/${o.id}/client`).send((s=>{$("body").off("click",e),o.option.buttons.disableAll()}),(e=>{o.option.message.text(e.content.message),o.option.buttons.draw.prop("disabled",!1),o.option.buttons.knock.prop("disabled",!1)}))}))}));let e=!0;for(const o of s.turnOrder)if(s.players[o].knocked){e=!1;break}e&&(o.option.buttons.knock.prop("disabled",!1),o.option.buttons.knock.on("click",(()=>{o.option.buttons.knock.prop("disabled",!0),o.option.buttons.draw.prop("disabled",!0),t.request("KNOCK",`gamecomms/${o.id}/client`).send((e=>{o.option.buttons.disableAll()}),(e=>{o.option.message.text(e.content.message),o.option.buttons.draw.prop("disabled",!1),o.option.buttons.knock.prop("disabled",!1)}))})))}else{o.option.message.text("Select a card from your hand to discard.");let e=!1;o.hand.resetSelect(),$("body").on("click",(function s(){const a=o.hand.selectedCard;null!=a&&(o.option.message.text(`You have selected the ${a.rank} of ${a.suit}. Click on Discard to confirm.`),e||(e=!0,o.option.buttons.discard.prop("disabled",!1),o.option.buttons.discard.on("click",(()=>{o.option.buttons.discard.prop("disabled",!0);const e=o.hand.selectedCard;t.request("DISCARD",`gamecomms/${o.id}/client`).write("rank",e.rank).write("suit",e.suit).send((e=>{$("body").off("click",s),o.option.buttons.disableAll()}),(e=>{o.option.message.text(e.content.message),o.option.buttons.discard.prop("disabled",!1)}))}))))}))}else o.option.message.text("Waiting for your turn...");else o.option.message.text("You got 3 strikes. You are out.");o.message.update(null!=s.message?s.message:"NO SERVER MESSAGE")}))}};let n=!0;o.onAuthStateChanged((e=>{const s=null==e;n?(n=!1,s?function(){console.log("No auth detected.");const e=$('<input type="text" placeholder="Enter Username" required>'),s=$('<input type="password" placeholder="Enter Password" required>'),a=()=>[e.val(),s.val()],n=$("<p>Authentication required to access content.</p>"),d=$("<button>Register</button>").click((async()=>{r(!0),n.text("Registering...");const e=a()[0];if(e.length<3||e.length>15)return n.text("Username needs to be between 3 and 15 characters."),void r(!1);o.createUserWithEmailAndPassword(e+"@thirtyone.bths.edu",a()[1]).then((e=>e.user)).then((async s=>{n.text("Setting up game account..."),t.id=""+s.uid,t.name=""+e,t.request("MAKE-ACCOUNT").write("name",e).send((e=>{n.text("Account successfully made."),window.location.reload()}),(e=>{n.text(e.content.message),alert("Unknown error appeared. Automatically logged you out."),o.signOut(),r(!1)}))})).catch((e=>{switch(e.code){case"auth/argument-error":n.text("Not all fields are filled out correctly.");break;case"auth/email-already-in-use":n.text("Username already used by someone else.");break;case"auth/invalid-email":n.text("Username not accepted.");break;case"auth/weak-password":n.text("Password is too weak.");break;default:n.text(e.message)}r(!1)}))})),i=$("<button>Log In</button>").click((async()=>{r(!0),n.text("Logging in...");const e=a()[0];if(e.length<6)return n.text("Invalid username. Not accepted."),void r(!1);o.signInWithEmailAndPassword(e+"@thirtyone.bths.edu",a()[1]).then((e=>e.user)).then((async e=>{n.text("Successfully signed in."),window.location.reload()})).catch((e=>{switch(e.code){case"auth/argument-error":n.text("Not all fields are filled out correctly.");break;case"auth/invalid-email":n.text("Invalid username. Not accepted.");break;case"auth/user-disabled":n.text("Account is disabled.");break;case"auth/user-not-found":n.text("No such account exists.");break;case"auth/wrong-password":n.text("Incorrect password.");break;default:n.text(e.message)}r(!1)}))}));function r(e){d.prop("disabled",e),i.prop("disabled",e)}$("body").append($('<section id="auth"></section>').append($('<form spellcheck="false"></form>').append(e,s),n,$("<div></div>").append(d,i)))}():function(e){console.log("Auth detected."),t.id=""+e.uid,t.updateRealTime(),$("body").append(t.nodes.profile.board.append($('<div class="profile"></div>').append($("<h1></h1>").append(t.nodes.profile.username,t.nodes.profile.level),$('<div class="exp"><span>space</span></div>').append(t.nodes.profile.bar,t.nodes.profile.exp),t.nodes.profile.stats,$('<div class="auth"></div>').append($("<button>Sign Out</button>").click((()=>{o.signOut()})))),function(){const e=$('<div class="queue" data-stage="default"></div>'),o=$("<h1>Play a Game!</h1>");e.append(o,$('<div data-stage="default">').append($("<button>Make a Room</button>").click((()=>{e.attr("data-stage","make"),o.text("Make a Room!")})),$("<button>Join a Room</button>").click((()=>{e.attr("data-stage","join"),o.text("Join a Room!")}))));const s=$('<input type="password" placeholder="Add Password (Optional)"required>'),a=$("<p>Type in a password for the room if you want.</p>"),n=$("<button>Back</button>").click((()=>{e.attr("data-stage","default"),o.text("Play a Game!"),s.val(null)})),d=$("<button>Make</button>").click((()=>{i(!0),a.text("Making room...");const e=s.val(),o=t.request("MAKE-ROOM");e.length>0&&o.write("password",e),o.send((o=>{a.text("Room successfully made."),t.joinRoom(o.content.code,e)}),(e=>{a.text(e.content.message),i(!1)}))}));function i(e){n.prop("disabled",e),d.prop("disabled",e)}e.append($('<div data-stage="make" spellcheck="false">').append(s,a,$("<section></section>").append(n,d)));const r=$('<input type="text" placeholder="Enter Room Code"required>'),c=$('<input type="password" placeholder="Enter Room Password"required>'),l=$("<p>Fill in the neccessary fields to join an exisitng room.</p>"),p=$("<button>Back</button>").click((()=>{e.attr("data-stage","default"),o.text("Play a Game!"),r.val(null),c.val(null)})),u=$("<button>Join</button>").click((()=>{m(!0),l.text("Joining room...");const e=r.val(),o=c.val(),s=t.request("JOIN-ROOM");e.length>0&&s.write("code",e),o.length>0&&s.write("password",o),s.send((s=>{l.text("Successfully joined room."),t.joinRoom(e,o)}),(e=>{l.text(e.content.message),m(!1)}))}));function m(e){p.prop("disabled",e),u.prop("disabled",e)}return e.append($('<div data-stage="join" spellcheck="false">').append(r,c,l,$("<section></section>").append(p,u))),e}()))}(e)):s&&window.location.reload()}))}();
