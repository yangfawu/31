firebase.initializeApp({apiKey:"AIzaSyBzdYHBzOtXU8ufVRY74_XKJUhZgy5Px_4",authDomain:"the-fisherman-68f32.firebaseapp.com",databaseURL:"https://the-fisherman-68f32-default-rtdb.firebaseio.com",projectId:"the-fisherman-68f32",storageBucket:"the-fisherman-68f32.appspot.com",messagingSenderId:"152465678914",appId:"1:152465678914:web:985bb2c1d664bb929883db"});const DB=firebase.database(),AU=firebase.auth(),IMAGES={node:$("body section#force-load-resources"),"10-clubs":$("body section#force-load-resources img.10-clubs"),"10-diamonds":$("body section#force-load-resources img.10-diamonds"),"10-hearts":$("body section#force-load-resources img.10-hearts"),"10-spades":$("body section#force-load-resources img.10-spades"),"11-clubs":$("body section#force-load-resources img.11-clubs"),"11-diamonds":$("body section#force-load-resources img.11-diamonds"),"11-hearts":$("body section#force-load-resources img.11-hearts"),"11-spades":$("body section#force-load-resources img.11-spades"),"12-clubs":$("body section#force-load-resources img.12-clubs"),"12-diamonds":$("body section#force-load-resources img.12-diamonds"),"12-hearts":$("body section#force-load-resources img.12-hearts"),"12-spades":$("body section#force-load-resources img.12-spades"),"13-clubs":$("body section#force-load-resources img.13-clubs"),"13-diamonds":$("body section#force-load-resources img.13-diamonds"),"13-hearts":$("body section#force-load-resources img.13-hearts"),"13-spades":$("body section#force-load-resources img.13-spades"),"1-clubs":$("body section#force-load-resources img.1-clubs"),"1-diamonds":$("body section#force-load-resources img.1-diamonds"),"1-hearts":$("body section#force-load-resources img.1-hearts"),"1-spades":$("body section#force-load-resources img.1-spades"),"2-clubs":$("body section#force-load-resources img.2-clubs"),"2-diamonds":$("body section#force-load-resources img.2-diamonds"),"2-hearts":$("body section#force-load-resources img.2-hearts"),"2-spades":$("body section#force-load-resources img.2-spades"),"3-clubs":$("body section#force-load-resources img.3-clubs"),"3-diamonds":$("body section#force-load-resources img.3-diamonds"),"3-hearts":$("body section#force-load-resources img.3-hearts"),"3-spades":$("body section#force-load-resources img.3-spades"),"4-clubs":$("body section#force-load-resources img.4-clubs"),"4-diamonds":$("body section#force-load-resources img.4-diamonds"),"4-hearts":$("body section#force-load-resources img.4-hearts"),"4-spades":$("body section#force-load-resources img.4-spades"),"5-clubs":$("body section#force-load-resources img.5-clubs"),"5-diamonds":$("body section#force-load-resources img.5-diamonds"),"5-hearts":$("body section#force-load-resources img.5-hearts"),"5-spades":$("body section#force-load-resources img.5-spades"),"6-clubs":$("body section#force-load-resources img.6-clubs"),"6-diamonds":$("body section#force-load-resources img.6-diamonds"),"6-hearts":$("body section#force-load-resources img.6-hearts"),"6-spades":$("body section#force-load-resources img.6-spades"),"7-clubs":$("body section#force-load-resources img.7-clubs"),"7-diamonds":$("body section#force-load-resources img.7-diamonds"),"7-hearts":$("body section#force-load-resources img.7-hearts"),"7-spades":$("body section#force-load-resources img.7-spades"),"8-clubs":$("body section#force-load-resources img.8-clubs"),"8-diamonds":$("body section#force-load-resources img.8-diamonds"),"8-hearts":$("body section#force-load-resources img.8-hearts"),"8-spades":$("body section#force-load-resources img.8-spades"),"9-clubs":$("body section#force-load-resources img.9-clubs"),"9-diamonds":$("body section#force-load-resources img.9-diamonds"),"9-hearts":$("body section#force-load-resources img.9-hearts"),"9-spades":$("body section#force-load-resources img.9-spades"),back:$("body section#force-load-resources img.back"),"x-icon":$("body section#force-load-resources img.x-icon"),"k-icon":$("body section#force-load-resources img.k-icon"),get(e){return this[e].clone()}};IMAGES.node.remove();const USER={id:"",name:"",exp:0,level:1,stats:{"games-finished":0,"games-played":0,"times-lost":0,"times-won":0},nodes:{profile:{board:$('<section id="board"></section>'),username:$("<span>username</span>"),level:$("<span>level</span>"),bar:$("<div></div>"),exp:$("<span>exp</span>"),stats:$('<div class="stats"></div>')},room:{box:$('<section id="room"></section>'),info:$("<h1><span>Code: CODE</span><span>Password: PASS</span></h1>"),message:$("<p>Waiting for server messages targeted at this room...</p>")}},room:{code:"",password:""},joinRoom(e,o){this.room.code=e,this.room.password=o,this.nodes.profile.board.remove(),$("body").append(this.nodes.room.box.append(this.nodes.room.message,this.nodes.room.info));const s=this,t=DB.ref("/rooms/"+e);t.on("value",(e=>{const o=e.val();null!=o&&(s.nodes.room.message.text(o.message),s.nodes.room.info.empty(),s.nodes.room.info.append($(`<span>Code: ${s.room.code}</span>`)),o.locked&&s.nodes.room.info.append($(`<span>Pass: ${s.room.password}</span>`)),o.started&&null!=o.game&&(t.off(),GAME.id=o.game,GAME.updateRealTime()))}))},updateRealTime(){const e=this;DB.ref("/users/"+this.id).on("value",(o=>{const s=o.val();if(null==s)return;e.exp=s.exp,e.level=s.level,e.stats=s.stats,e.nodes.profile.username.text(e.name),e.nodes.profile.level.text(e.level),e.nodes.profile.bar.css("width",e.exp%1e3/10+"%"),e.nodes.profile.exp.text(e.exp%1e3);const t=s.stats;e.nodes.profile.stats.empty();for(const o in t)e.nodes.profile.stats.append($("<div></div>").append($(`<span>${[...(""+o).matchAll(/-?(\w+)-?/g)].map((e=>e[1])).map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}</span>`),$(`<span>${t[o]}</span>`)))}))},request(e,o){o=o||"client";const s=this;return{uid:s.id,type:e,origin:o,content:{},write(e,o){return this.content[e]=o,this},async send(e,o){e=e||(e=>{}),o=o||(e=>{});const t=DB.ref(`/${this.origin}/${this.uid}`),a=await t.push().key;if(t.child(a).set({uid:this.uid,id:a,type:this.type.toUpperCase(),timestamp:(new Date).getTime(),origin:this.origin,content:this.content},(e=>{null!=e&&console.log(e)})),"USER-GOT-RESPONSE"==this.type.toUpperCase())return;const n=[...this.origin.split("/"),this.uid];n[n.length-2]="server";const d=DB.ref(n.join("/"));d.child(a).on("value",(t=>{const n=t.val();null!=n&&(d.off(),s.request("USER-GOT-RESPONSE").write("prevResId",a).send(),n.content.success?e(n):o(n))}))}}}},GAME={id:"",moving:"",message:{updatable:$("<p>Wait for your turn.</p>"),node:$('<section id="game-message-ui">'),update(e){return this.updatable.text(e)}},pile:{node:$('<section id="game-pile-ui" data-selected-pile="">'),deck:$('<div class="cards">'),discard:$('<div class="cards">'),updateDeck(e){this.deck.empty();const o=IMAGES.get("back"),s=[],t=this;for(const a of e)s.push(o.clone().click((()=>{t.node.attr("data-selected-pile","deck")})));o.css("visibility","hidden"),o.click((()=>{t.node.attr("data-selected-pile","")}));const a=2-s.length;for(let e=0;e<a;e++)s.push(o.clone());s.reverse(),this.deck.append(...s)},get selectedPile(){return this.node.attr("data-selected-pile")},resetSelect(){this.node.attr("data-selected-pile","")},updateDiscard(e){this.discard.empty();const o=[],s=this;for(const t of e)o.push(IMAGES.get(`${t.rank}-${t.suit}`).click((()=>{s.node.attr("data-selected-pile","discard")})));const t=IMAGES.get("back");t.css("visibility","hidden");const a=2-o.length;for(let e=0;e<a;e++)o.push(t.clone().click((()=>{s.node.attr("data-selected-pile","")})));o.reverse(),this.discard.append(...o),this.resetSelect()}},hand:{node:$('<section id="game-hand-ui" data-selected-card="">'),get selectedCard(){const e=this.node.attr("data-selected-card").split("-");return e.length<2?null:{rank:e[0],suit:e[1]}},resetSelect(){this.node.attr("data-selected-card",null)},update(e){const o=[$("<p>You're eliminated.</p>")],s=this;for(const t of e){const e=`${t.rank}-${t.suit}`;o.push(IMAGES.get(e).click((()=>{s.node.attr("data-selected-card",e)})))}this.node.empty(),this.node.append(...o)}},option:{node:$('<section id="game-option-ui">'),message:$('<div class="message">SERVER MESSAGE</div>'),buttons:{node:$('<div class="options">'),draw:$("<button>Draw</button>"),discard:$("<button>Discard</button>"),knock:$("<button>Knock</button>"),disableAll(){this.draw.prop("disabled",!0),this.draw.off(),this.discard.prop("disabled",!0),this.discard.off(),this.knock.prop("disabled",!0),this.discard.off()}}},players:{node:$('<section id="game-players-ui">'),container:$('<div class="container">'),update(e){this.container.empty();const o=[...Object.values(e.players)],s=[];for(const t of o){const o=[];for(let e=0;e<3;e++)o.push(IMAGES.get("x-icon"));for(let e=0;e<t.strikes;e++)o[e].attr("class","striked");s.push($(`<div class="player${t.name==USER.name?" me":""}">`).append($(`<span>${t.name}</span>`),$("<span>").append(...o),$(`<span>${e.statsHidden&&t.id!=USER.id?"?":t.value}</span>`)))}this.container.append(...s)}},order:{node:$('<section id="game-order-ui">'),turn:$("<h1>Turn:before #</h1>"),container:$('<div class="container">'),update(e){this.container.empty(),this.turn.text(e.turn);const o=e.players,s=e.turnOrder,t=[];for(const e of s){const s=IMAGES.get("k-icon");o[e].knocked&&s.attr("class","knocked"),t.push($('<div class="player">').append(s,$(`<span>${e}</span>`)))}this.container.append(...t)}},updateRealTime(){$("body").empty(),$("body").append(gamePileUi(),gamePlayersUi(),gameOrderUi(),gameHandUi(),gameOptionUi(),gameMessageUi());const e=this;e.option.buttons.disableAll(),DB.ref("/games/"+this.id).on("value",(o=>{const s=o.val();if(null==s&&window.location.reload(),e.pile.updateDeck(null!=s.deck?s.deck:[]),e.pile.updateDiscard(null!=s.discard?s.discard:[]),e.players.update(s),e.order.update(s),e.hand.update(null!=s.players&&null!=s.players[USER.name]&&null!=s.players[USER.name].hand?s.players[USER.name].hand:[]),e.option.buttons.disableAll(),s.over)e.option.message.text("Game is over.");else if(s.turnOrder.includes(USER.name))if(e.moving=s.turnOrder[0],s.roundOver)e.option.message.text("Waiting for tally...");else if(e.moving==USER.name)if(s.players[USER.name].hand.length<4){e.option.message.text("Would you like to draw a card or knock?"),e.option.buttons.draw.prop("disabled",!1),e.option.buttons.draw.on("click",(()=>{e.option.buttons.knock.prop("disabled",!0),e.option.buttons.draw.prop("disabled",!0),e.option.message.text("Select the pile you want to draw from."),e.pile.resetSelect(),$("body").on("click",(function o(){const s=e.pile.selectedPile;["deck","discard"].includes(s)&&USER.request("DRAW-"+s.toUpperCase(),`gamecomms/${e.id}/client`).send((s=>{$("body").off("click",o),e.option.buttons.disableAll()}),(o=>{e.option.message.text(o.content.message),e.option.buttons.draw.prop("disabled",!1),e.option.buttons.knock.prop("disabled",!1)}))}))}));let o=!0;for(const e of s.turnOrder)if(s.players[e].knocked){o=!1;break}o&&(e.option.buttons.knock.prop("disabled",!1),e.option.buttons.knock.on("click",(()=>{e.option.buttons.knock.prop("disabled",!0),e.option.buttons.draw.prop("disabled",!0),USER.request("KNOCK",`gamecomms/${e.id}/client`).send((o=>{e.option.buttons.disableAll()}),(o=>{e.option.message.text(o.content.message),e.option.buttons.draw.prop("disabled",!1),e.option.buttons.knock.prop("disabled",!1)}))})))}else{e.option.message.text("Select a card from your hand to discard.");let o=!1;e.hand.resetSelect(),$("body").on("click",(function s(){const t=e.hand.selectedCard;null!=t&&(e.option.message.text(`You have selected the ${t.rank} of ${t.suit}. Click on Discard to confirm.`),o||(o=!0,e.option.buttons.discard.prop("disabled",!1),e.option.buttons.discard.on("click",(()=>{e.option.buttons.discard.prop("disabled",!0);const o=e.hand.selectedCard;USER.request("DISCARD",`gamecomms/${e.id}/client`).write("rank",o.rank).write("suit",o.suit).send((o=>{$("body").off("click",s),e.option.buttons.disableAll()}),(o=>{e.option.message.text(o.content.message),e.option.buttons.discard.prop("disabled",!1)}))}))))}))}else e.option.message.text("Waiting for your turn...");else e.option.message.text("You got 3 strikes. You are out.");e.message.update(null!=s.message?s.message:"NO SERVER MESSAGE")}))}};let FIRST_TIME=!0;function noAuth(){console.log("No auth detected.");const e=$('<input type="text" placeholder="Enter Username" required>'),o=$('<input type="password" placeholder="Enter Password" required>'),s=()=>[e.val(),o.val()],t=$("<p>Authentication required to access content.</p>"),a=$("<button>Register</button>").click((async()=>{d(!0),t.text("Registering...");const e=s()[0];if(e.length<6||e.length>10)return t.text("Username needs to be between 6 and 10 characters."),void d(!1);AU.createUserWithEmailAndPassword(e+"@thirtyone.bths.edu",s()[1]).then((e=>e.user)).then((async o=>{t.text("Setting up game account..."),USER.id=""+o.uid,USER.name=""+e,USER.request("MAKE-ACCOUNT").write("name",e).send((e=>{t.text("Account successfully made."),window.location.reload()}),(e=>{t.text(e.content.message),alert("Unknown error appeared. Automatically logged you out."),AU.signOut(),d(!1)}))})).catch((e=>{switch(e.code){case"auth/argument-error":t.text("Not all fields are filled out correctly.");break;case"auth/email-already-in-use":t.text("Username already used by someone else.");break;case"auth/invalid-email":t.text("Username not accepted.");break;case"auth/weak-password":t.text("Password is too weak.");break;default:t.text(e.message)}d(!1)}))})),n=$("<button>Log In</button>").click((async()=>{d(!0),t.text("Logging in...");const e=s()[0];if(e.length<6)return t.text("Invalid username. Not accepted."),void d(!1);AU.signInWithEmailAndPassword(e+"@thirtyone.bths.edu",s()[1]).then((e=>e.user)).then((async e=>{t.text("Successfully signed in."),window.location.reload()})).catch((e=>{switch(e.code){case"auth/argument-error":t.text("Not all fields are filled out correctly.");break;case"auth/invalid-email":t.text("Invalid username. Not accepted.");break;case"auth/user-disabled":t.text("Account is disabled.");break;case"auth/user-not-found":t.text("No such account exists.");break;case"auth/wrong-password":t.text("Incorrect password.");break;default:t.text(e.message)}d(!1)}))}));function d(e){a.prop("disabled",e),n.prop("disabled",e)}$("body").append($('<section id="auth"></section>').append($('<form spellcheck="false"></form>').append(e,o),t,$("<div></div>").append(a,n)))}function hasAuth(e){console.log("Auth detected."),USER.id=""+e.uid,USER.name=""+e.email.split("@")[0],USER.updateRealTime(),$("body").append(USER.nodes.profile.board.append($('<div class="profile"></div>').append($("<h1></h1>").append(USER.nodes.profile.username,USER.nodes.profile.level),$('<div class="exp"><span>space</span></div>').append(USER.nodes.profile.bar,USER.nodes.profile.exp),USER.nodes.profile.stats,$('<div class="auth"></div>').append($("<button>Sign Out</button>").click((()=>{AU.signOut()})))),queueUi()))}function queueUi(){const e=$('<div class="queue" data-stage="default"></div>'),o=$("<h1>Play a Game!</h1>");e.append(o,$('<div data-stage="default">').append($("<button>Make a Room</button>").click((()=>{e.attr("data-stage","make"),o.text("Make a Room!")})),$("<button>Join a Room</button>").click((()=>{e.attr("data-stage","join"),o.text("Join a Room!")}))));const s=$('<input type="password" placeholder="Add Password (Optional)"required>'),t=$("<p>Type in a password for the room if you want.</p>"),a=$("<button>Back</button>").click((()=>{e.attr("data-stage","default"),o.text("Play a Game!"),s.val(null)})),n=$("<button>Make</button>").click((()=>{d(!0),t.text("Making room...");const e=s.val(),o=USER.request("MAKE-ROOM");e.length>0&&o.write("password",e),o.send((o=>{t.text("Room successfully made."),USER.joinRoom(o.content.code,e)}),(e=>{t.text(e.content.message),d(!1)}))}));function d(e){a.prop("disabled",e),n.prop("disabled",e)}e.append($('<div data-stage="make" spellcheck="false">').append(s,t,$("<section></section>").append(a,n)));const i=$('<input type="text" placeholder="Enter Room Code"required>'),r=$('<input type="password" placeholder="Enter Room Password"required>'),c=$("<p>Fill in the neccessary fields to join an exisitng room.</p>"),l=$("<button>Back</button>").click((()=>{e.attr("data-stage","default"),o.text("Play a Game!"),i.val(null),r.val(null)})),p=$("<button>Join</button>").click((()=>{u(!0),c.text("Joining room...");const e=i.val(),o=r.val(),s=USER.request("JOIN-ROOM");e.length>0&&s.write("code",e),o.length>0&&s.write("password",o),s.send((s=>{c.text("Successfully joined room."),USER.joinRoom(e,o)}),(e=>{c.text(e.content.message),u(!1)}))}));function u(e){l.prop("disabled",e),p.prop("disabled",e)}return e.append($('<div data-stage="join" spellcheck="false">').append(i,r,c,$("<section></section>").append(l,p))),e}function gameMessageUi(){const e=GAME.message.node;return e.append(GAME.message.updatable),e}function gamePileUi(){const e=GAME.pile.node;return e.append($('<div class="pile">').append(GAME.pile.deck,$("<h1>Deck</h1>")),$('<div class="pile">').append(GAME.pile.discard,$("<h1>Discard</h1>"))),e}function gameHandUi(){return GAME.hand.node}function gameOptionUi(){const e=GAME.option.node;return e.append(GAME.option.message,GAME.option.buttons.node.append(GAME.option.buttons.draw,GAME.option.buttons.discard,GAME.option.buttons.knock)),e}function gamePlayersUi(){const e=GAME.players.node;return e.append($("<h1>Players</h1>"),GAME.players.container),e}function gameOrderUi(){const e=GAME.order.node;return e.append(GAME.order.turn,GAME.order.container),e}AU.onAuthStateChanged((e=>{const o=null==e;FIRST_TIME?(FIRST_TIME=!1,o?noAuth():hasAuth(e)):o&&window.location.reload()}));
